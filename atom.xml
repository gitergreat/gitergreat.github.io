<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Greatness</title>
  
  <subtitle>记录自己的学习过程</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-22T13:14:33.977Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr.W</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python基本图形绘制</title>
    <link href="http://yoursite.com/2018/09/22/python-2/"/>
    <id>http://yoursite.com/2018/09/22/python-2/</id>
    <published>2018-09-22T12:13:29.000Z</published>
    <updated>2018-09-22T13:14:33.977Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>继续Python笔记的整理，第二章是库的基本用法以及利用turtle库绘图的实例。</em></p></blockquote><a id="more"></a><h1 id="深入理解Python语言"><a href="#深入理解Python语言" class="headerlink" title="深入理解Python语言"></a>深入理解Python语言</h1><hr><h2 id="计算机技术的演进："><a href="#计算机技术的演进：" class="headerlink" title="计算机技术的演进："></a>计算机技术的演进：</h2><p>1.计算机系统结构时代   计算机能力问题<br>2.网络和视窗时代          交互问题<br>3.复杂信息系统时代       数据问题<br>4.人工智能时代           人类问题<br>当前:新计算时代</p><h2 id="编程语言的多样初心："><a href="#编程语言的多样初心：" class="headerlink" title="编程语言的多样初心："></a>编程语言的多样初心：</h2><p>C：<br>指针、内存、数据类型<br>语言本质：理解计算机系统结构<br>解决问题：性能<br>java：<br>面向对象<br>对象、跨平台、运行时<br>…<br>python：<br>理解问题的求解</p><h2 id="python语言的特点："><a href="#python语言的特点：" class="headerlink" title="python语言的特点："></a>python语言的特点：</h2><p><em>通用性</em>强制可读性<br><em>较少的底层语法元素</em>多种编程方式<br>*支持中文字符</p><h2 id="语法简介"><a href="#语法简介" class="headerlink" title="语法简介"></a>语法简介</h2><p>生态高产:python是最高产的程序设计语言<br>工具决定思维</p><h2 id="“超级语言的诞生”"><a href="#“超级语言的诞生”" class="headerlink" title="“超级语言的诞生”"></a>“超级语言的诞生”</h2><p>机器语言、汇编语言——不适合编程<br>高级语言，与CPU无关——适合编程<br>超级语言，庞大的计算生态。python——唯一的超级语言</p><h1 id="实例二：Python蟒蛇绘制"><a href="#实例二：Python蟒蛇绘制" class="headerlink" title="实例二：Python蟒蛇绘制"></a>实例二：Python蟒蛇绘制</h1><hr><p>下面先给出代码，再进行代码分析</p><h2 id="蟒蛇绘制代码"><a href="#蟒蛇绘制代码" class="headerlink" title="蟒蛇绘制代码"></a>蟒蛇绘制代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#PythonDraw.py</span><br><span class="line">import turtle</span><br><span class="line">turtle.setup(650,350,200,200)</span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.fd(-250)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.pensize(25)</span><br><span class="line">turtle.pencolor(&quot;gold&quot;)</span><br><span class="line">turtle.seth(-40)</span><br><span class="line">for i in range(4):</span><br><span class="line">    turtle.circle(40,80)</span><br><span class="line">    turtle.circle(-40,80)</span><br><span class="line">turtle.circle(40,80/2)</span><br><span class="line">turtle.fd(40)</span><br><span class="line">turtle.circle(16,180)</span><br><span class="line">turtle.fd(40 * 2/3)</span><br><span class="line">turtle.done()    #关闭turtle，一般在使用完turtle后添加，否则会无响应</span><br></pre></td></tr></table></figure><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><h3 id="库引用与import"><a href="#库引用与import" class="headerlink" title="库引用与import"></a>库引用与import</h3><pre><code>库引用：扩充Python程序功能的方式</code></pre><p>1.使用import保留字完成，采用如下编码风格<br>import&lt;库名&gt;<br>&lt;库名&gt;.&lt;函数名&gt;(&lt;函数参数&gt;)</p><p>2.使用from和import来简化代码<br>例：<code>import turtle</code><br><code>from turtle import*/from &lt;库名&gt; import &lt;函数名&gt;   (&lt;函数参数&gt;)</code></p><p>比较：<br>第一种方法不会出现函数重名的现象<br>第二种方法会出现</p><p>3.使用import和as保留字共同完成<br><code>import&lt;库名&gt;as&lt;库别名&gt;</code><br>&lt;库别名&gt;.&lt;函数名称&gt;(&lt;函数参数&gt;)<br>–给调用的外部库关联一个更短、更适合自己的名字<br><strong>建议第三种方法</strong></p><h3 id="turtle绘图窗体"><a href="#turtle绘图窗体" class="headerlink" title="turtle绘图窗体"></a>turtle绘图窗体</h3><p><code>turtle.setup(width,height,startx,starty)</code><br>-setup()设置窗体的大小及位置<br>-4个参数中后两个可选,去掉后默认在屏幕的正中心</p><h3 id="turtle画笔控制函数"><a href="#turtle画笔控制函数" class="headerlink" title="turtle画笔控制函数"></a>turtle画笔控制函数</h3><p><code>turtle.penup()  #别名 turtle.pu  ————抬起画笔</code><br><code>turtle.pendown()  #别名 turtle.pd  ————落下画笔</code><br><code>turtle.pensize(width)  #别名 turtle.width(width) ————画笔宽度</code><br><code>turtle.pencolor(color)  #————color为颜色字符串或者rgb值</code><br><code>turtle.colormode()  #————设置画笔RGB颜色的表示模式</code></p><p>画笔颜色有三种形式：<br>1.颜色字符串<br>2.rgb的小数值<br>3.rgb的元组值<br>附:rgb色彩体系<br>    rgb由三种基本颜色构成万物色<br>红黄蓝 0-255 整数或 0-1小数</p><p><code>turtle.colormode(mode)</code><br>-1.0小数值<br>-255整数值</p><h3 id="运动控制函数"><a href="#运动控制函数" class="headerlink" title="运动控制函数"></a>运动控制函数</h3><p>1.空间坐标体系，坐标原点在画布的正中心<br><code>turtle.goto(x,y) #————去到那个坐标</code><br>2.<code>turtle.forword(d) #别名 turtle.fd(d) ————向前前进</code><br><code>turtle.bk(d) #————后退</code><br>-d:进距离，可以为负数<br>弧形:<br><code>turtle.circle(r,extent)</code><br>-r:半径<br>-extent:绘制的弧度<br>半径是负数:圆心在右侧</p><h3 id="turtle方向控制函数（角度坐标体系）"><a href="#turtle方向控制函数（角度坐标体系）" class="headerlink" title="turtle方向控制函数（角度坐标体系）"></a>turtle方向控制函数（角度坐标体系）</h3><pre><code>控制海龟面对方向：绝对角度&amp;海龟角度</code></pre><p><code>turtle.setheading(angle） #别名 turtle.seth(angle) ————改变行进方向，海龟走角度</code><br><code>turtle.left(angle) #————海龟向左转</code><br><code>turtle.right(angle) #————海龟向右转</code><br>-angle:角度<br>只改变方向，不移动</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;继续Python笔记的整理，第二章是库的基本用法以及利用turtle库绘图的实例。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python笔记整理" scheme="http://yoursite.com/categories/Python%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基本语法元素</title>
    <link href="http://yoursite.com/2018/09/22/Python-1/"/>
    <id>http://yoursite.com/2018/09/22/Python-1/</id>
    <published>2018-09-22T10:45:17.000Z</published>
    <updated>2018-09-22T12:31:52.128Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>之前学习Python的笔记排版过于凌乱，现在<br> 决定重新整理一下，以便日后的复习和使用。</em></p></blockquote> <a id="more"></a><h1 id="程序设计基本方法"><a href="#程序设计基本方法" class="headerlink" title="程序设计基本方法"></a>程序设计基本方法</h1><hr><h2 id="计算机特性"><a href="#计算机特性" class="headerlink" title="计算机特性"></a>计算机特性</h2><pre><code>功能性可编程性</code></pre><h2 id="摩尔定律"><a href="#摩尔定律" class="headerlink" title="摩尔定律"></a>摩尔定律</h2><pre><code>集成电路单位面积晶体管数约两年增长一倍</code></pre><p>预测很准确</p><h2 id="编译和解释"><a href="#编译和解释" class="headerlink" title="编译和解释"></a>编译和解释</h2><p>源代码-&gt;目标代码</p><pre><code>编译：将原代码一次性转化为目标代码解释：逐条,类似于实时静态语言：编译脚本语言：解释</code></pre><h2 id="程序的基本编写方法"><a href="#程序的基本编写方法" class="headerlink" title="程序的基本编写方法"></a>程序的基本编写方法</h2><pre><code>IPO输入 处理 输出输入是程序的开始输出是程序的结束处理方法——算法</code></pre><h2 id="编程解决问题的步骤"><a href="#编程解决问题的步骤" class="headerlink" title="编程解决问题的步骤"></a>编程解决问题的步骤</h2><pre><code>分析问题划分边界设计算法编写程序测试程序维护程序</code></pre><h2 id="计算机编程"><a href="#计算机编程" class="headerlink" title="计算机编程"></a>计算机编程</h2><pre><code>基础套路练习</code></pre><h1 id="实例1：温度转换"><a href="#实例1：温度转换" class="headerlink" title="实例1：温度转换"></a>实例1：温度转换</h1><hr> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#TempConvert.py</span><br><span class="line">TempStr = input(&quot;请输入带有符号的温度值：&quot;)</span><br><span class="line">if TempStr[-1] in [&apos;F&apos;,&apos;f&apos;]:</span><br><span class="line">    C = (eval(TempStr[0:-1]) - 32)/1.8</span><br><span class="line">    print(&quot;转化后的温度是&#123;:.2f&#125;C&quot;.format(C))</span><br><span class="line">elif TempStr[-1] in [&apos;C&apos;,&apos;c&apos;]:</span><br><span class="line">    F = 1.8*eval(TempStr[0:-1]) + 32</span><br><span class="line">    print(&quot;转化后的温度是&#123;:.2f&#125;F&quot;.format(F))</span><br><span class="line">else:</span><br><span class="line">    print(&quot;输入格式错误&quot;)</span><br></pre></td></tr></table></figure><p>   这段代码很简单，但是也包含了很多Python的语法元素，下面来具体分析：</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><pre><code>Python的注释有两种方法：1.# 一个井号，一般用于单行注释2.&apos;&apos;&apos; &apos;&apos;&apos;或者&quot;&quot;&quot; &quot;&quot;&quot; 一对单引号或双引号，一般用于多行注释</code></pre><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><pre><code>缩进是Python的强制语法要求，表达语句间的关系</code></pre><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><pre><code>变量采用标识名来表示变量命名字符：   大小写字母、数字、下划线和汉字及组合   注意：大小写敏感、首字符不能是数字、不能与保留字相同</code></pre><p>其中Python的保留字如下：（33个）<br><img src="/py/保留字.png" alt="保留字" title="保留字"></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><pre><code>定义：由一对单引号或双引号标识的字符的有序序列字符串的索引方式：正向递增序号 0 1 2 3 4 5 反向递增序号 -6 -5 -4 -3 -2 -1索引——返回某一个单个字符   &lt;  &gt;[M]切片——返回字符串的某一段字符  &lt;  &gt;[M：N]如温度转换实例中的TempStr[0:-1]表示的是从0开始读到最后一个字符串的字符相当于去掉最后一个字符</code></pre><h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><pre><code>整数浮点数</code></pre><h3 id="列表类型"><a href="#列表类型" class="headerlink" title="列表类型"></a>列表类型</h3><pre><code>列表用[]表示，采用(,)分隔各元素       [&apos;F&apos;,&apos;f&apos;]表示两个元素’F&apos;或‘f’使用保留字in判断一个元素是否在列表中</code></pre><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><pre><code>赋值语句：由赋值符号构成的一行代码分支语句：由判断条件决定程序运行方向的语句</code></pre><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><pre><code>根据输入参数产生不同输出的过程</code></pre><h3 id="程序的输入输出"><a href="#程序的输入输出" class="headerlink" title="程序的输入输出"></a>程序的输入输出</h3><pre><code>input()——从控制台获得用户输入的函数括号中是提示信息字符串         print——以字符型式像控制台输出结果的函数print函数的格式化{}表示槽  后续变量填充到槽中eval函数（评估函数）去掉参数最外侧引号并执行余下语句能将字符串语句的信息变成语句</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;之前学习Python的笔记排版过于凌乱，现在&lt;br&gt; 决定重新整理一下，以便日后的复习和使用。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python笔记整理" scheme="http://yoursite.com/categories/Python%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="http://yoursite.com/2018/09/22/%E7%AC%AC1%E7%AF%87%E5%8D%9A%E6%96%87/"/>
    <id>http://yoursite.com/2018/09/22/第1篇博文/</id>
    <published>2018-09-22T02:01:56.000Z</published>
    <updated>2018-09-22T13:17:30.153Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>1.字体字号    2.分级标题<br>3.超链接      4.列表<br>5.插入图片    6.表格<br>7.分割线      8.引用<br>9.代码        10.流程图</em></p></blockquote><a id="more"></a><p>1.字体字号</p><p><em>这是斜体</em>或<em>这也是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p><p>改变字体、大小、颜色</p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="red">我是红色</font><br><font color="#008000">我是绿色</font><br><font color="Blue">我是蓝色</font><br><font size="5">我是尺寸</font><br><font face="黑体" color="green" size="5">我是黑体，绿色，尺寸为5</font><p>为文字添加背景色</p><table><tr><td bgcolor="yellow">背景色yellow</td></tr></table><p>2.分级标题</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>3.超链接</p><p>行内格式：<a href="https://gitergreat.github.io/" target="_blank" rel="noopener">我的博客</a><br>参考格式：[我的博客][1],百度[2]<br>[1]:<a href="https://gitergreat.github.io/" target="_blank" rel="noopener">https://gitergreat.github.io/</a><br>[2]:<a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a><br>自动链接：我的博客地址<a href="https://gitergreat.github.io/" target="_blank" rel="noopener">https://gitergreat.github.io/</a></p><p>4.列表</p><p>无序列表：<br>写法：</p><ul><li>无序列表1</li></ul><ul><li>无序列表2</li></ul><ul><li>无序列表3</li></ul><p>有序列表：<br>写法：<br>1.有序列表1<br>2.有序列表2<br>3.有序列表3</p><p>列表嵌套：<br>上一级和下一级之间敲三个空格即可</p><p>5.插入图片</p><p><img src="/images/ki.jpg" alt="Kyire Irving" title="Kyire Irving"></p><p>设置图片大小、位置<br><img src="/images/ki.jpg" width="50%" height="50%"></p><p><img src="/images/ki.jpg" width="251" height="350"></p><div align="right"><img src="/images/ki.jpg" width="50%" height="50%"></div><p>6.表格</p><table><thead><tr><th>表头1</th><th style="text-align:left">表头2</th><th style="text-align:center">表头3</th><th style="text-align:right">表头4</th></tr></thead><tbody><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr><tr><td>默认左对齐</td><td style="text-align:left">左对齐</td><td style="text-align:center">居中对齐</td><td style="text-align:right">右对齐</td></tr></tbody></table><p>7.分割线</p><hr><hr><hr><hr><p>8.引用</p><blockquote><p>这是引用内容</p><blockquote><p>这是引用内容</p><blockquote><p>这是引用内容</p></blockquote></blockquote></blockquote><p>9.代码</p><p><code>print(&quot;Hello world!&quot;)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br></pre></td></tr></table></figure><p>10.流程图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;1.字体字号    2.分级标题&lt;br&gt;3.超链接      4.列表&lt;br&gt;5.插入图片    6.表格&lt;br&gt;7.分割线      8.引用&lt;br&gt;9.代码        10.流程图&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Markdown语法" scheme="http://yoursite.com/categories/Markdown%E8%AF%AD%E6%B3%95/"/>
    
    
      <category term="Markdone" scheme="http://yoursite.com/tags/Markdone/"/>
    
  </entry>
  
</feed>
